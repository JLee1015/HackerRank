import java.util.*;

/*
You are given integers n and m. n is the total amount of integers and m is the size of the contiguous subarray.
Find the maximum amount of unique integers you can have in a subarray.
*/

public class test {
    public static void main(String[] args) {
        //Store frequency
        HashMap<Integer, Integer> map = new HashMap<>();
        //Store current contiguous subarray
        Deque<Integer> deque = new ArrayDeque<>();
        
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();        
        int max = 0;
        
        for (int i = 0; i < n; i++) {
            //Remove old value if necessary
            if (i >= m) {
                int out = deque.remove();
                if (map.get(out) == 1) {
                    map.remove(out);
                } 
                else {
                    map.put(out, map.get(out) - 1);
                }
            }
            //Add new value
            int num = in.nextInt();
            deque.add(num);
            map.merge(num, 1, Integer::sum);
            
            max = Math.max(max, map.size());
            if(max == m){
                break;
            }
        }
        
        in.close();
        System.out.println(max);
    }
}
